#!/usr/bin/env ruby

# http://projecteuler.net/index.php?section=problems&id=2
#
# Problem 2
# 19 October 2001
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

# fibonacci starting with 1 and 2
def fibonacci(n)
  # n = 0 --> first number
  case n
  when 0 then return 1
  when 1 then return 2
  else fibonacci(n - 1) + fibonacci(n - 2)
  end
end

i = 0
sum = 0
below_4M = true
while below_4M do
  if fibonacci(i) <= 4_000_000 
    puts fibonacci(i)
    sum += fibonacci(i) if fibonacci(i) % 2 == 0
    i += 1
  else
    below_4M = false
  end
end

puts "Sum Result: #{sum}"
